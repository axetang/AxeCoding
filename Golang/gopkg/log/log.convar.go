/************************************************************************************
 **Author:  Axe Tang; Email: axetang@163.com
 **Package: log
 **Element: log.convar
 **Type: const,var
 ------------------------------------------------------------------------------------
 **Definition:
 const (
    Ldate         = 1 << iota     // the date in the local time zone: 2009/01/23
    Ltime                         // the time in the local time zone: 01:23:23
    Lmicroseconds                 // microsecond resolution: 01:23:23.123123.  assumes Ltime.
    Llongfile                     // full file name and line number: /a/b/c/d.go:23
    Lshortfile                    // final file name element and line number: d.go:23. overrides Llongfile
    LUTC                          // if Ldate or Ltime is set, use UTC rather than the local time zone
    LstdFlags     = Ldate | Ltime // initial values for the standard logger
 )
 ------------------------------------------------------------------------------------
 **Description:
 These flags define which text to prefix to each log entry generated by the Logger.
 Bits are or'ed together to control what's printed. There is no control over the
 order they appear (the order listed here) or the format they present (as described
 in the comments). The prefix is followed by a colon only when Llongfile or Lshortfile
 is specified. For example, flags Ldate | Ltime (or LstdFlags) produce,
 	2009/01/23 01:23:23 message
 while flags Ldate | Ltime | Lmicroseconds | Llongfile produce,
 	2009/01/23 01:23:23.123123 /a/b/c/d.go:23: message
 ------------------------------------------------------------------------------------
 **要点总结:
 这些选项定义Logger类型如何生成用于每条日志的前缀文本。
 const (
    // 字位共同控制输出日志信息的细节。不能控制输出的顺序和格式。
    // 在所有项目后会有一个冒号：2009/01/23 01:23:23.123123 /a/b/c/d.go:23: message
    Ldate         = 1 << iota     // 日期：2009/01/23
    Ltime                         // 时间：01:23:23
    Lmicroseconds                 // 微秒分辨率：01:23:23.123123（用于增强Ltime位）
    Llongfile                     // 文件全路径名+行号： /a/b/c/d.go:23
    Lshortfile                    // 文件无路径名+行号：d.go:23（会覆盖掉Llongfile）
    LstdFlags     = Ldate | Ltime // 标准logger的初始值
 )
*************************************************************************************/
package main

func main() {
}
